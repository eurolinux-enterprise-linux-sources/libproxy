diff -up libproxy-0.3.0/src/modules/pacrunner_mozjs.c.esr17 libproxy-0.3.0/src/modules/pacrunner_mozjs.c
--- libproxy-0.3.0/src/modules/pacrunner_mozjs.c.esr17	2013-02-01 09:54:14.577224150 +0100
+++ libproxy-0.3.0/src/modules/pacrunner_mozjs.c	2013-02-01 09:57:54.477400725 +0100
@@ -53,7 +53,7 @@ typedef struct _pxMozillaPACRunnerModule
 	ctxStore *ctxs;
 } pxMozillaPACRunnerModule;
 
-static JSBool dnsResolve(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval) {
+static JSBool dnsResolve(JSContext *cx, JSObject *obj, unsigned argc, jsval *argv, jsval *rval) {
 	// Get hostname argument
 	char *tmp = px_strdup(JS_GetStringBytes(JS_ValueToString(cx, argv[0])));
 
@@ -88,7 +88,7 @@ static JSBool dnsResolve(JSContext *cx,
 		return true;
 }
 
-static JSBool myIpAddress(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval) {
+static JSBool myIpAddress(JSContext *cx, JSObject *obj, unsigned argc, jsval *argv, jsval *rval) {
 	char *hostname = JS_malloc(cx, 1024);
 	if (!gethostname(hostname, 1023)) {
 		JSString *myhost = JS_NewString(cx, hostname, strlen(hostname));
@@ -129,7 +129,6 @@ static ctxStore *ctxs_new(pxPAC *pac)
 	self->cls->enumerate   = JS_EnumerateStub;
 	self->cls->resolve     = JS_ResolveStub;
 	self->cls->convert     = JS_ConvertStub;
-	self->cls->finalize    = JS_FinalizeStub;
 
 	// Initialize Javascript runtime environment
 	if (!(self->run = JS_NewRuntime(1024 * 1024)))                   goto error;
